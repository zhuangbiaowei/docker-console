#!/usr/bin/env ruby
require 'ripl'
require 'ripl/shell_commands'
require 'ripl/color_result'
require 'ripl/color_streams'
require 'ripl/commands'
require './ripl/like_shell'
require 'docker'

Ripl.config[:color_streams_stdout] = :light_blue
Ripl.config[:color_streams_stderr] = :light_red
Ripl.config[:prompt] = lambda {" > " }

def human_size(size)
  if size>1000*1000
    return "#{(size/1000.0/1000.0*10).to_i/10.0} MB"
  elsif size>1000
    return "#{(size/1000.0*10).to_i/10.0} KB"
  else
    return "#{size} B"
  end
end

class DockerConsole
 def cd(url)
   Docker.url = url
 end
 def li
   images = Docker::Image.all
   images.each do |img|
     img.info["RepoTags"].each do |rt|
       repo,tag = rt.split(":")
       repo=repo+" "*(16-repo.length)
       tag=tag+" "*(16-tag.length)
       puts img.id[0..11]+"\t"+repo+"\t"+tag+"\t"+human_size(img.info["VirtualSize"])+"\n"
     end
   end
   return "Total #{images.count} images."
 end
 def lc
   Docker::Container.all
 end
  def lca
    Docker::Container.all(:all=>true)
  end
end
dc = DockerConsole.new

version = "0.0.1"
Ripl.start :binding => dc.instance_eval{ binding }
